import{u as e}from"./index-C5zXT6-L.js";import{c as n,d as t}from"./data-DMJbYYJT.js";import{O as a,a as s}from"./regexp-LyZ7ySAN.js";import{_ as l}from"./GiForm-BLYiR9tG.js";import{S as o,ac as i,U as r,d as u,b as d,e as p,o as m,c,w as f,h as b,i as y,G as v,g as h,H as g,M as w,a0 as x,ae as k}from"./index-DLVnymOZ.js";import{u as V}from"./useResetReactive-CHEaE70t.js";import{_ as C}from"./index-DxaeUeVD.js";const G=u({__name:"Card4",setup(u){const{width:G}=e(),_={btns:{hide:!0}},F=[{type:"input",label:"姓名",field:"name",props:{maxLength:4},rules:[{required:!0,message:"请输入姓名"},{maxLength:4,message:"姓名不超过4个字符"},{match:a,message:"仅支持中文姓名"}]},{type:"input",label:"手机",field:"phone",props:{maxLength:11},rules:[{required:!0,message:"请输入手机号"},{match:s,message:"手机号格式不正确"}]},{type:"select",label:"性别",field:"sex",options:[{label:"男",value:1},{label:"女",value:0}]},{type:"date-picker",label:"生日",field:"birthday"},{type:"checkbox-group",label:"爱好",field:"hobbys",span:2,options:[{label:"电影",value:"01"},{label:"音乐",value:"02"},{label:"旅行",value:"03"},{label:"游戏",value:"04"}]},{type:"input-number",label:"排序",field:"sort",props:{min:0}},{type:"radio-group",label:"状态",field:"status",options:[{label:"启用",value:1},{label:"禁用",value:0}]},{type:"rate",label:"评分",field:"mark"},{type:"switch",label:"是否隐藏",field:"hide",formItemProps:{extra:"隐藏成绩项"}},{type:"slider",label:"成绩",field:"grade"},{type:"cascader",label:"城市",field:"city",options:n},{type:"tree-select",label:"部门",field:"dept",data:t},{type:"textarea",label:"备注",field:"remark",span:2,formItemProps:{extra:"这里是额外信息"}}],{columns:P,resetColumns:R,setPropsValue:O}=function(e){const n=()=>i(e),t=o(n());return{columns:t,resetColumns:()=>{Object.assign(t,n())},setValue:(e,n,a)=>{if(!t.length)return;const s=t.find((n=>n.field===e));s?s[n]=a:r.warning(`没有这个field属性值-${e}，请检查！`)},setPropsValue:(e,n,a)=>{if(!t.length)return;const s=t.find((n=>n.field===e));s?(s.props||(s.props={}),s.props[n]=a):r.warning(`没有这个field属性值-${e}，请检查！`)}}}(F),[j,T]=V({name:"",remark:"这是备注这是备注",status:1}),D=d(),E=()=>{R(),T(),w.open({title:"新增",width:"90%",modalStyle:{maxWidth:"600px"},fullscreen:G.value<600,content:()=>x(l,{ref:e=>D.value=e,options:_,columns:P,modelValue:j,"onUpdate:modelValue":e=>Object.assign(j,e)}),onBeforeOk:async()=>{var e,n;try{return!(await(null==(n=null==(e=D.value)?void 0:e.formRef)?void 0:n.validate()))&&(await new Promise((e=>setTimeout((()=>e(!0)),300))),r.success("新增成功！"),!0)}catch{return!1}}})},I=()=>{O("status","disabled",!0),O("hide","disabled",!0);const e={title:"编辑",width:"90%",modalStyle:{maxWidth:"600px"},fullscreen:G.value<600,content:()=>x(l,{ref:e=>D.value=e,options:_,columns:P,modelValue:j,"onUpdate:modelValue":e=>Object.assign(j,e)}),onBeforeOk:async()=>{var e,n;try{return!(await(null==(n=null==(e=D.value)?void 0:e.formRef)?void 0:n.validate()))&&(await new Promise((e=>setTimeout((()=>e(!0)),300))),r.success("编辑成功！"),!0)}catch{return!1}}},n=w.open(e);setTimeout((()=>{j.name="张三",n.update(e)}),300)},L=d(!1),M=d(!1),S=()=>{R(),M.value=!1,L.value=!0},U=()=>{O("status","disabled",!0),O("hide","disabled",!0),M.value=!0,L.value=!0},W=()=>{k.open({title:"数据结构",content:()=>x(C,{codeJson:"\n<template>\n  <a-card title=\"配置表单-弹窗\">\n    <template #extra>\n      <a-button type=\"primary\" status=\"warning\" @click=\"onViewCode\">\n        <template #icon><icon-code /></template>\n        <span>查看代码</span>\n      </a-button>\n    </template>\n\n    <a-alert>此示例编辑模式会禁用状态、是否隐藏</a-alert>\n    <a-card title=\"表单-模态框\" :bordered=\"true\" class=\"gi_mt\">\n      <a-space>\n        <a-button type=\"primary\" @click=\"onAdd\">新增</a-button>\n        <a-button type=\"primary\" status=\"success\" @click=\"onEdit\">编辑</a-button>\n      </a-space>\n    </a-card>\n\n    <a-card title=\"表单-抽屉\" :bordered=\"true\" class=\"gi_mt\">\n      <a-space>\n        <a-button type=\"primary\" @click=\"onAddDrawer\">新增</a-button>\n        <a-button type=\"primary\" status=\"success\" @click=\"onEditDrawer\">编辑</a-button>\n      </a-space>\n    </a-card>\n\n    <a-drawer v-model:visible=\"visible\" :title=\"isEdit ? '编辑' : '新增'\" :width=\"width >= 600 ? 600 : '100%'\">\n      <GiForm v-model=\"form\" :options=\"options\" :columns=\"columns\"></GiForm>\n    </a-drawer>\n  </a-card>\n</template>\n\n<script setup lang=\"ts\">\nimport { Drawer, Message, Modal } from '@arco-design/web-vue'\nimport { useWindowSize } from '@vueuse/core'\nimport { cityOptions, deptData } from './data'\nimport Card4Json from './code/card4-json'\nimport * as Regexp from '@/utils/regexp'\nimport { type Columns, GiForm, type Options, useGiForm } from '@/components/GiForm'\nimport { useResetReactive } from '@/hooks'\nimport GiCodeView from '@/components/GiCodeView/index.vue'\n\nconst { width } = useWindowSize()\n\nconst options: Options = {\n  btns: { hide: true }\n}\n\nconst initColumns: Columns = [\n  {\n    type: 'input',\n    label: '姓名',\n    field: 'name',\n    props: {\n      maxLength: 4\n    },\n    rules: [\n      { required: true, message: '请输入姓名' },\n      { maxLength: 4, message: '姓名不超过4个字符' },\n      { match: Regexp.OnlyCh, message: '仅支持中文姓名' }\n    ]\n  },\n  {\n    type: 'input',\n    label: '手机',\n    field: 'phone',\n    props: {\n      maxLength: 11\n    },\n    rules: [\n      { required: true, message: '请输入手机号' },\n      { match: Regexp.Phone, message: '手机号格式不正确' }\n    ]\n  },\n  {\n    type: 'select',\n    label: '性别',\n    field: 'sex',\n    options: [\n      { label: '男', value: 1 },\n      { label: '女', value: 0 }\n    ]\n  },\n  {\n    type: 'date-picker',\n    label: '生日',\n    field: 'birthday'\n  },\n  {\n    type: 'checkbox-group',\n    label: '爱好',\n    field: 'hobbys',\n    span: 2,\n    options: [\n      { label: '电影', value: '01' },\n      { label: '音乐', value: '02' },\n      { label: '旅行', value: '03' },\n      { label: '游戏', value: '04' }\n    ]\n  },\n  {\n    type: 'input-number',\n    label: '排序',\n    field: 'sort',\n    props: {\n      min: 0\n    }\n  },\n  {\n    type: 'radio-group',\n    label: '状态',\n    field: 'status',\n    options: [\n      { label: '启用', value: 1 },\n      { label: '禁用', value: 0 }\n    ]\n  },\n  {\n    type: 'rate',\n    label: '评分',\n    field: 'mark'\n  },\n  {\n    type: 'switch',\n    label: '是否隐藏',\n    field: 'hide',\n    formItemProps: { extra: '隐藏成绩项' }\n  },\n  {\n    type: 'slider',\n    label: '成绩',\n    field: 'grade'\n  },\n  {\n    type: 'cascader',\n    label: '城市',\n    field: 'city',\n    options: cityOptions\n  },\n  {\n    type: 'tree-select',\n    label: '部门',\n    field: 'dept',\n    data: deptData\n  },\n  {\n    type: 'textarea',\n    label: '备注',\n    field: 'remark',\n    span: 2,\n    formItemProps: { extra: '这里是额外信息' }\n  }\n]\n\nconst { columns, resetColumns, setPropsValue } = useGiForm(initColumns)\n\nconst [form, resetForm] = useResetReactive({\n  name: '',\n  remark: '这是备注这是备注',\n  status: 1\n})\n\nconst GiFormRef = ref<InstanceType<typeof GiForm>>()\nconst onAdd = () => {\n  resetColumns()\n  resetForm()\n  Modal.open({\n    title: '新增',\n    width: '90%',\n    modalStyle: { maxWidth: '600px' },\n    fullscreen: width.value < 600,\n    content: () =>\n      h(GiForm, {\n        'ref': (e) => GiFormRef.value = e as InstanceType<typeof GiForm>,\n        'options': options,\n        'columns': columns,\n        'modelValue': form,\n        'onUpdate:modelValue': (e) => Object.assign(form, e)\n      }),\n    onBeforeOk: async () => {\n      try {\n        const flag = await GiFormRef.value?.formRef?.validate()\n        if (flag) return false\n        await new Promise((resolve) => setTimeout(() => resolve(true), 300)) as unknown as Promise<boolean>\n        Message.success('新增成功！')\n        return true\n      } catch {\n        return false\n      }\n    }\n  })\n}\n\nconst onEdit = () => {\n  setPropsValue('status', 'disabled', true) // 禁用 状态\n  setPropsValue('hide', 'disabled', true) // 禁用 是否隐藏\n  const option = {\n    title: '编辑',\n    width: '90%',\n    modalStyle: { maxWidth: '600px' },\n    fullscreen: width.value < 600,\n    content: () =>\n      h(GiForm, {\n        'ref': (e) => GiFormRef.value = e as InstanceType<typeof GiForm>,\n        'options': options,\n        'columns': columns,\n        'modelValue': form,\n        'onUpdate:modelValue': (e) => Object.assign(form, e)\n      }),\n    onBeforeOk: async () => {\n      try {\n        const flag = await GiFormRef.value?.formRef?.validate()\n        if (flag) return false\n        await new Promise((resolve) => setTimeout(() => resolve(true), 300)) as unknown as Promise<boolean>\n        Message.success('编辑成功！')\n        return true\n      } catch {\n        return false\n      }\n    }\n  }\n  const instance = Modal.open(option)\n  // 模拟异步更新\n  setTimeout(() => {\n    form.name = '张三'\n    instance.update(option)\n  }, 300)\n}\n\nconst visible = ref(false)\nconst isEdit = ref(false)\nconst onAddDrawer = () => {\n  resetColumns()\n  isEdit.value = false\n  visible.value = true\n}\n\nconst onEditDrawer = () => {\n  setPropsValue('status', 'disabled', true) // 禁用 状态\n  setPropsValue('hide', 'disabled', true) // 禁用 是否隐藏\n  isEdit.value = true\n  visible.value = true\n}\n\nconst onViewCode = () => {\n  Drawer.open({\n    title: '数据结构',\n    content: () => h(GiCodeView, { codeJson: Card4Json, type: 'vue' }),\n    width: width.value < 500 ? '100%' : 560\n  })\n}\n<\/script>\n\n<style lang=\"scss\" scoped></style>\n",type:"vue"}),width:G.value<500?"100%":560})};return(e,n)=>{const t=p("icon-code"),a=p("a-button"),s=p("a-alert"),o=p("a-space"),i=p("a-card"),r=p("a-drawer");return m(),c(i,{title:"配置表单-弹窗"},{extra:f((()=>[b(a,{type:"primary",status:"warning",onClick:W},{icon:f((()=>[b(t)])),default:f((()=>[n[2]||(n[2]=y("span",null,"查看代码",-1))])),_:1})])),default:f((()=>[b(s,null,{default:f((()=>n[3]||(n[3]=[v("此示例编辑模式会禁用状态、是否隐藏")]))),_:1}),b(i,{title:"表单-模态框",bordered:!0,class:"gi_mt"},{default:f((()=>[b(o,null,{default:f((()=>[b(a,{type:"primary",onClick:E},{default:f((()=>n[4]||(n[4]=[v("新增")]))),_:1}),b(a,{type:"primary",status:"success",onClick:I},{default:f((()=>n[5]||(n[5]=[v("编辑")]))),_:1})])),_:1})])),_:1}),b(i,{title:"表单-抽屉",bordered:!0,class:"gi_mt"},{default:f((()=>[b(o,null,{default:f((()=>[b(a,{type:"primary",onClick:S},{default:f((()=>n[6]||(n[6]=[v("新增")]))),_:1}),b(a,{type:"primary",status:"success",onClick:U},{default:f((()=>n[7]||(n[7]=[v("编辑")]))),_:1})])),_:1})])),_:1}),b(r,{visible:h(L),"onUpdate:visible":n[1]||(n[1]=e=>g(L)?L.value=e:null),title:h(M)?"编辑":"新增",width:h(G)>=600?600:"100%"},{default:f((()=>[b(h(l),{modelValue:h(j),"onUpdate:modelValue":n[0]||(n[0]=e=>g(j)?j.value=e:null),options:_,columns:h(P)},null,8,["modelValue","columns"])])),_:1},8,["visible","title","width"])])),_:1})}}});export{G as _};
