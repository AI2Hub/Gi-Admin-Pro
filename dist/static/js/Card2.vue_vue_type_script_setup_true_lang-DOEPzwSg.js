import{u as e}from"./index-B-zNCEWq.js";import{c as n,d as t}from"./data-DMJbYYJT.js";import{_ as a}from"./index-Bbt2S_wH.js";import{_ as l}from"./GiForm-CtqRhP7n.js";import{O as s,a as o}from"./regexp-LyZ7ySAN.js";import{d as r,b as i,S as p,J as d,k as m,e as u,o as f,c,w as b,h as y,g,G as h,i as v,H as x,t as w,ae as k,a0 as C,U as _}from"./index-CELQnxv0.js";import{u as R}from"./useDict-DgK1cNrI.js";const j=r({__name:"Card2",setup(r){const{width:j}=e(),{data:P}=R({code:"status"}),I=i(!0),G=p({name:"",phone:"",sort:0,sex:"",birthday:"",hobbys:[],status:1,mark:0,hide:!1,grade:0,test:"",remark:""}),S=d("formRef"),V=p({btns:{hide:!0}}),O=m((()=>[{type:"group-title",label:"基本信息",field:"base-title",span:2,formItemProps:{labelColStyle:{display:"none"}}},{type:"input",label:"姓名",field:"name",props:{maxLength:4},rules:[{required:I.value,message:"请输入姓名"},{maxLength:4,message:"姓名不超过4个字符"},{match:s,message:"仅支持中文姓名"}]},{type:"input",label:"手机",field:"phone",props:{maxLength:11},rules:[{required:!!G.name,message:"请输入手机号"},{match:o,message:"手机号格式不正确"}]},{type:"select",label:"性别",field:"sex",options:[{label:"男",value:1},{label:"女",value:0}]},{type:"date-picker",label:"生日",field:"birthday"},{type:"checkbox-group",label:"爱好",field:"hobbys",span:2,options:[{label:"电影",value:"01"},{label:"音乐",value:"02"},{label:"旅行",value:"03"},{label:"游戏",value:"04"}]},{type:"input-number",label:"排序",field:"sort",props:{min:0}},{type:"radio-group",label:"状态",field:"status",options:P.value},{label:"测试",field:"test",disabled:e=>0===e.status,formItemProps:{extra:"查看这里效果请切换状态"}},{type:"rate",label:"评分",field:"mark"},{type:"switch",label:"是否隐藏",field:"hide",formItemProps:{extra:"隐藏成绩项"}},{type:"slider",label:"成绩",field:"grade",span:2,hide:e=>(e.hide&&(e.grade=0),!0===e.hide)},{type:"group-title",label:"分组标题1",field:"group-title1",span:2,formItemProps:{labelColStyle:{display:"none"}}},{type:"cascader",label:"城市",field:"city",options:n,disabled:e=>0===e.status},{type:"tree-select",label:"部门",field:"dept",data:t,disabled:e=>0===e.status},{type:"group-title",label:"分组标题2",field:"group-title2",span:2,formItemProps:{labelColStyle:{display:"none"}}},{type:"textarea",label:"备注",field:"remark",span:2,formItemProps:{extra:"这里是额外信息"}},{type:"upload",label:"附件",field:"file",span:2,props:{listType:"picture-card",action:"/"},formItemProps:{extra:"上传文件只支持zip、rar、doc、docx、pdf、jpg、png格式"}},{field:"btns",span:2}])),q=()=>{k.open({title:"数据结构",content:()=>C(a,{codeJson:"\n<template>\n  <a-card title=\"配置表单-新增\">\n    <template #extra>\n      <a-space>\n        <a-button type=\"primary\" @click=\"isNameRequired = !isNameRequired\">姓名必填动态设置</a-button>\n        <a-button type=\"primary\" status=\"warning\" @click=\"onViewCode\">\n          <template #icon><icon-code /></template>\n          <span>查看JSON配置</span>\n        </a-button>\n      </a-space>\n    </template>\n    <a-row :gutter=\"30\">\n      <a-col :xs=\"24\" :sm=\"24\" :md=\"12\">\n        <GiForm ref=\"formRef\" v-model=\"form\" :options=\"options\" :columns=\"columns\">\n          <template #test=\"{ disabled }\"> 自定义插槽-禁用状态：{{ disabled }} </template>\n          <template #btns>\n            <a-row justify=\"end\" class=\"w-full\">\n              <a-space>\n                <a-button type=\"primary\" @click=\"save\">保存</a-button>\n                <a-button @click=\"reset\">重置</a-button>\n              </a-space>\n            </a-row>\n          </template>\n        </GiForm>\n      </a-col>\n      <a-col :xs=\"24\" :sm=\"24\" :md=\"12\">\n        <GiCodeView :code-json=\"JSON.stringify(form, null, '\t')\"></GiCodeView>\n      </a-col>\n    </a-row>\n  </a-card>\n</template>\n\n<script setup lang=\"ts\">\nimport { Drawer, Message } from '@arco-design/web-vue'\nimport { useWindowSize } from '@vueuse/core'\nimport { cityOptions, deptData } from './data'\nimport Card2Json from './code/card2-json'\nimport GiCodeView from '@/components/GiCodeView/index.vue'\nimport GiForm from '@/components/GiForm'\nimport type { Columns, Options } from '@/components/GiForm'\nimport * as Regexp from '@/utils/regexp'\nimport { useDict } from '@/hooks/app'\n\nconst { width } = useWindowSize()\nconst { data: status_options } = useDict({ code: 'status' })\nconst isNameRequired = ref(true)\n\nconst form = reactive({\n  name: '',\n  phone: '',\n  sort: 0,\n  sex: '',\n  birthday: '',\n  hobbys: [],\n  status: 1,\n  mark: 0,\n  hide: false,\n  grade: 0,\n  test: '',\n  remark: ''\n})\n\nconst formRef = useTemplateRef('formRef')\n\nconst options: Options = reactive({\n  btns: { hide: true }\n})\n\nconst columns = computed<Columns<typeof form>>(() => [\n  {\n    type: 'group-title',\n    label: '基本信息',\n    field: 'base-title',\n    span: 2,\n    formItemProps: {\n      labelColStyle: { display: 'none' }\n    }\n  },\n  {\n    type: 'input',\n    label: '姓名',\n    field: 'name',\n    props: {\n      maxLength: 4\n    },\n    rules: [\n      // 动态rules示例\n      ...(() => {\n        return [\n          { required: isNameRequired.value, message: '请输入姓名' },\n          { maxLength: 4, message: '姓名不超过4个字符' },\n          { match: Regexp.OnlyCh, message: '仅支持中文姓名' }\n        ]\n      })()\n    ]\n  },\n  {\n    type: 'input',\n    label: '手机',\n    field: 'phone',\n    props: {\n      maxLength: 11\n    },\n    rules: [\n      { required: !!form.name, message: '请输入手机号' }, // 如果有name的时候，手机号必填（动态rules示例）\n      { match: Regexp.Phone, message: '手机号格式不正确' }\n    ]\n  },\n  {\n    type: 'select',\n    label: '性别',\n    field: 'sex',\n    options: [\n      { label: '男', value: 1 },\n      { label: '女', value: 0 }\n    ]\n  },\n  {\n    type: 'date-picker',\n    label: '生日',\n    field: 'birthday'\n  },\n  {\n    type: 'checkbox-group',\n    label: '爱好',\n    field: 'hobbys',\n    span: 2,\n    options: [\n      { label: '电影', value: '01' },\n      { label: '音乐', value: '02' },\n      { label: '旅行', value: '03' },\n      { label: '游戏', value: '04' }\n    ]\n  },\n  {\n    type: 'input-number',\n    label: '排序',\n    field: 'sort',\n    props: {\n      min: 0\n    }\n  },\n  {\n    type: 'radio-group',\n    label: '状态',\n    field: 'status',\n    options: status_options.value // 这里使用了字典\n  },\n  {\n    label: '测试',\n    field: 'test',\n    disabled: (i) => i.status === 0,\n    formItemProps: { extra: '查看这里效果请切换状态' }\n  },\n  {\n    type: 'rate',\n    label: '评分',\n    field: 'mark'\n  },\n  {\n    type: 'switch',\n    label: '是否隐藏',\n    field: 'hide',\n    formItemProps: { extra: '隐藏成绩项' }\n  },\n  {\n    type: 'slider',\n    label: '成绩',\n    field: 'grade',\n    span: 2,\n    hide: (i) => {\n      i.hide && (i.grade = 0)\n      return i.hide === true\n    }\n  },\n  {\n    type: 'group-title',\n    label: '分组标题1',\n    field: 'group-title1',\n    span: 2,\n    formItemProps: {\n      labelColStyle: { display: 'none' }\n    }\n  },\n  {\n    type: 'cascader',\n    label: '城市',\n    field: 'city',\n    options: cityOptions,\n    disabled: (i) => i.status === 0\n  },\n  {\n    type: 'tree-select',\n    label: '部门',\n    field: 'dept',\n    data: deptData,\n    disabled: (i) => i.status === 0\n  },\n  {\n    type: 'group-title',\n    label: '分组标题2',\n    field: 'group-title2',\n    span: 2,\n    formItemProps: {\n      labelColStyle: { display: 'none' }\n    }\n  },\n  {\n    type: 'textarea',\n    label: '备注',\n    field: 'remark',\n    span: 2,\n    formItemProps: { extra: '这里是额外信息' }\n  },\n  {\n    type: 'upload',\n    label: '附件',\n    field: 'file',\n    span: 2,\n    props: {\n      listType: 'picture-card',\n      action: '/'\n    },\n    formItemProps: {\n      extra: '上传文件只支持zip、rar、doc、docx、pdf、jpg、png格式'\n    }\n  },\n  {\n    field: 'btns',\n    span: 2\n  }\n])\n\nconst onViewCode = () => {\n  Drawer.open({\n    title: '数据结构',\n    content: () => h(GiCodeView, { codeJson: Card2Json, type: 'vue' }),\n    width: width.value < 560 ? '100%' : 560\n  })\n}\n\nconst save = async () => {\n  const error = await formRef.value?.formRef?.validate()\n  if (error) return false\n  Message.success('验证通过')\n}\n\nconst reset = () => {\n  formRef.value?.formRef?.resetFields()\n}\n<\/script>\n\n<style lang=\"scss\" scoped></style>\n",type:"vue"}),width:j.value<560?"100%":560})},F=async()=>{var e,n;if(await(null==(n=null==(e=S.value)?void 0:e.formRef)?void 0:n.validate()))return!1;_.success("验证通过")},J=()=>{var e,n;null==(n=null==(e=S.value)?void 0:e.formRef)||n.resetFields()};return(e,n)=>{const t=u("a-button"),s=u("icon-code"),o=u("a-space"),r=u("a-row"),i=u("a-col"),p=u("a-card");return f(),c(p,{title:"配置表单-新增"},{extra:b((()=>[y(o,null,{default:b((()=>[y(t,{type:"primary",onClick:n[0]||(n[0]=e=>I.value=!g(I))},{default:b((()=>n[2]||(n[2]=[h("姓名必填动态设置")]))),_:1}),y(t,{type:"primary",status:"warning",onClick:q},{icon:b((()=>[y(s)])),default:b((()=>[n[3]||(n[3]=v("span",null,"查看代码",-1))])),_:1})])),_:1})])),default:b((()=>[y(r,{gutter:30},{default:b((()=>[y(i,{xs:24,sm:24,md:12},{default:b((()=>[y(g(l),{ref_key:"formRef",ref:S,modelValue:g(G),"onUpdate:modelValue":n[1]||(n[1]=e=>x(G)?G.value=e:null),options:g(V),columns:g(O)},{test:b((({disabled:e})=>[h(" 自定义插槽-禁用状态："+w(e),1)])),btns:b((()=>[y(r,{justify:"end",class:"w-full"},{default:b((()=>[y(o,null,{default:b((()=>[y(t,{type:"primary",onClick:F},{default:b((()=>n[4]||(n[4]=[h("保存")]))),_:1}),y(t,{onClick:J},{default:b((()=>n[5]||(n[5]=[h("重置")]))),_:1})])),_:1})])),_:1})])),_:1},8,["modelValue","options","columns"])])),_:1}),y(i,{xs:24,sm:24,md:12},{default:b((()=>[y(a,{"code-json":JSON.stringify(g(G),null,"\t")},null,8,["code-json"])])),_:1})])),_:1})])),_:1})}}});export{j as _};
